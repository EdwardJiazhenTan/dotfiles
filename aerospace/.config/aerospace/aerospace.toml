# Place a copy of this config to ~/.aerospace.toml
#
# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 20

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# 鼠标跟随任何焦点变化（窗口或工作空间）
# Mouse follows any focus change (window or workspace)
on-focus-changed = ['move-mouse window-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical =   10
outer.left =       10
outer.bottom =     10
outer.top =        3
outer.right =      10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]
ctrl-left = 'workspace prev'
ctrl-right = 'workspace next'

# Layout switching
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'
cmd-alt-shift-ctrl-space = 'layout tiles accordion'


# Monitor focus navigation (vim-style hjkl with hyprkey)
# 显示器焦点导航
cmd-alt-shift-ctrl-h = 'focus-monitor left'
cmd-alt-shift-ctrl-j = 'focus-monitor down'
cmd-alt-shift-ctrl-k = 'focus-monitor up'
cmd-alt-shift-ctrl-l = 'focus-monitor right'

# Move current window to different monitors (alt + hjkl)
# 将当前窗口移动到不同显示器
alt-h = ['move-node-to-monitor left', 'focus-monitor left']
alt-j = ['move-node-to-monitor down', 'focus-monitor down']
alt-k = ['move-node-to-monitor up', 'focus-monitor up']
alt-l = ['move-node-to-monitor right', 'focus-monitor right']

# Window resizing
cmd-shift-minus = 'resize smart -50'
cmd-shift-equal = 'resize smart +50'

# Workspace navigation (letter-based)
# T=Terminal, A=AI, M=Media, W=Work, B=Browser, C=Coding, X=Extra, P=Productivity, S=Social, G=Gaming
cmd-alt-shift-ctrl-t = 'workspace T'
cmd-alt-shift-ctrl-a = 'workspace A'
cmd-alt-shift-ctrl-m = 'workspace M'
cmd-alt-shift-ctrl-w = 'workspace W'
cmd-alt-shift-ctrl-b = 'workspace B'
cmd-alt-shift-ctrl-c = 'workspace C'
cmd-alt-shift-ctrl-x = 'workspace X'
cmd-alt-shift-ctrl-p = 'workspace P'
cmd-alt-shift-ctrl-s = 'workspace S'
cmd-alt-shift-ctrl-g = 'workspace G'

# Move window to workspace
alt-t = ['move-node-to-workspace T', 'workspace T']
alt-a = ['move-node-to-workspace A', 'workspace A']
alt-m = ['move-node-to-workspace M', 'workspace M']
alt-w = ['move-node-to-workspace W', 'workspace W']
alt-b = ['move-node-to-workspace B', 'workspace B']
alt-c = ['move-node-to-workspace C', 'workspace C']
alt-x = ['move-node-to-workspace X', 'workspace X']
alt-p = ['move-node-to-workspace P', 'workspace P']
alt-s = ['move-node-to-workspace S', 'workspace S']
alt-g = ['move-node-to-workspace G', 'workspace G']

# Additional useful bindings
# Toggle fullscreen
cmd-f = 'fullscreen'

# Close window
cmd-shift-q = 'close'

# Reload config
cmd-shift-r = 'reload-config'

# Workspace back and forth
f20 = 'workspace-back-and-forth'

# Move workspace to specific monitors
cmd-alt-shift-ctrl-u = 'move-workspace-to-monitor VG259QM'
cmd-alt-shift-ctrl-i = 'move-workspace-to-monitor AW2724DM'
cmd-alt-shift-ctrl-o = "move-workspace-to-monitor 'Built-in Retina Display'"

# Move workspace to next monitor (cycle through monitors)
cmd-shift-tab = 'move-workspace-to-monitor --wrap-around next'
# Workspace-to-monitor assignments disabled - use hyprkey+u/i/o to move workspaces manually
# [workspace-to-monitor-force-assignment]
# T = 'Built-in Retina Display'  # Terminal
# A = 'Built-in Retina Display'  # AI
# M = 'VG259QM'                   # Media
# W = 'AW2724DM'                  # Web
# C = 'AW2724DM'                  # Coding
# X = 'Built-in Retina Display'  # Extra
# P = 'Built-in Retina Display'  # Productivity
# S = 'VG259QM'                   # Social
# G = 'VG259QM'                   # Gaming
